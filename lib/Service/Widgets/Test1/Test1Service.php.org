<?php
/**
 * Nextcloud - Dashboard app
 *
 * This file is licensed under the Affero General Public License version 3 or
 * later. See the COPYING file.
 *
 * @author Maxence Lange <maxence@artificial-owl.com>
 * @copyright 2018, Maxence Lange <maxence@artificial-owl.com>
 * @license GNU AGPL version 3 or any later version
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


namespace OCA\Dashboard\Service\Widgets\Test1;

use OCA\Dashboard\Service\ConfigService;
use OCA\Dashboard\Service\MiscService;
use OCA\Dashboard\Db\SettingsRequest;
use OCP\Dashboard\Model\IWidgetConfig;


class Test1Service {

	const TEST1_FILE = __DIR__ . '/../../../../test1.json';


	/** @var ConfigService */
	private $configService;

	/** @var MiscService */
	private $miscService;
	
	/** @var SettingsRequest */
	private $settingsRequest;
		
	

	/**
	 * ProviderService constructor.
	 *
	 * @param ConfigService $configService
	 * @param MiscService $miscService
	 *
	 */
	public function __construct(ConfigService $configService, MiscService $miscService, SettingsRequest $settingsRequest ) {
		$this->configService = $configService;
		$this->miscService = $miscService;
		$this->settingsRequest = $settingsRequest;
		}


	public function getRandomTest1Data()  {
	//	$Test1Data = $this->getTest1Data();

	//	return trim($Test1Data[array_rand($Test1Data)]);
	//	$Test1Data = "Hello world";
	//	$Test1Data = getSettings();
	//	return trim($Test1Data[0]);
	
	//$storageInfo = OC_Helper::getStorageInfo('/');
	$widgetId ="Test1";
	//$userId = 'admin';
	//$userId = $this->UserId();
	//$userId =(self::userId);
    	

		$Test1Data = $this->getWidgetConfig($widgetId, $userId);
	//	$Test1Data = $this->widgetsService->getUserValue(2);
		
		return json_encode($Test1Data);
	//	return trim ($Test1Data->Settings);
	}

	/**
	 * @param string $widgetId
	 * @param string $userId
	 *
	 * @return IWidgetConfig
	 */	
	public function getWidgetConfig(string $widgetId, string $userId) {
		
		return $this->settingsRequest->get($widgetId, $userId);
	}

	/**
	 * @return array
	 */
	public function getTest1Data() {
		$content = file_get_contents(self::TEST1_FILE);
	//	$Test1Data = explode('%', $content);
        $Test1Data = "Hello world";
		return $Test1Data;
	}

}